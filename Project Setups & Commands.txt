PROJECT Installation :
1.Ubuntu-desktop
sudo apt-get install ubuntu-desktop

2.Upgrade pip and install pip
sudo apt-get install python3-pip

3.Install git
sudo apt-get install git

4.Install ryu
git clone https://github.com/faucetsdn/ryu.git
cd ryu; pip3 install .
------------OR USE------------------
sudo apt install python3-ryu

5.Install flowmanager
git clone https://github.com/martimy/flowmanager

6.D-ITG Traffic generator
sudo apt-get install unzip
sudo apt-get install g++
wget   http://traffic.comics.unina.it/software/ITG/codice/D-ITG-2.8.1-r1023-src.zip --no-check-certificate
unzip DITG
cd DITG/src
sudo make

7.install openswitchsu
sudo apt-get install openvswitch-switch
sudo service openvswitch-switch start

[Basic Commands]

Enter root
ans : sudo -i

TOPO Commands
- sudo mn --custom new.py --topo mytopo --controller=remote,ip=192.168.56.101 --switch ovsk,protocols=OpenFlow13 --mac
- sudo mn --custom paperTopo.py --topo mytopo --controller=remote,ip=192.168.56.101 --switch ovsk,stp=1,protocols=OpenFlow13 --mac --link tc,bw=10
- sudo mn --custom paperTopo.py --topo mytopo --controller=remote,ip=127.0.0.1 --mac -i 192.168.1.0/24 --switch ovsk,stp=1,protocols=OpenFlow13 --mac --link tc,bw=10
- sudo python customtopo.py --controller=remote,ip=127.0.0.1 --mac -i 192.168.1.0/24 --switch -ovsk,protocols=OpenFlow13 --mac --link tc,bw=10

Ryu Traffic Monitor
ans : ryu-manager --verbose ryu.app.simple_monitor_13 (use --verbose for debug mode)


Checking OS version
ans : cat /etc/lsb-release

Checking Switch version
ans : sudo ovs-vsctl --version

fix controller
problem 1 : Controller is not running
ans : PYTHONPATH=../bin/ryu-manager ryu/app/simple_switch.py OR ryu-manager ryu.app.simple_switch_13

find folder and path 
ans : pwd

Checking Topology with gui viewer
ans : ryu/ryu/app ryu run gui_topology/gui_topology.py --observe-links

Ryu Monitoring
ans :  app ryu-manager simple_monitor_13.py


access root folder 
ans : sudo -i nautilus

------------------------------------------------------------------------ D-ITG SET----------------------------------------------------
Sender Commands :
-l logfile
-m owdm (one-way delay meter) || rttm (round-trip time meter)
-t generation duration (default : 10000 ms)
-sa source address (Set by OS)
-a destination address 
-rp destination port
-T protorol (UDP, TCP, ICMP, SCTP, DCCP)
-C rate (default : 1000 pkts/sec)
-c pkt size (default : 512 bytes)

Reciever Commands :
-Sp port no. (default : 9000)
-l logfile

Single Flow : one traffic flow ||||||| Multi Flow :

ของพี่ : Sender h1 h2 h3 // Receiver h4 h5 h6
EX : ./ITGSend -a 10.0.0.4 -O 200 -c 1500 -T UDP -t 60000



// Host1 to Host4 [UDP]
1st
AVG bitrate = 6547.830 Kbit/s
AVG packet rate = 545.65 pkt/s

2nd
AVG bitrate = 9051.715 Kbit/s
AVG packet rate = 754.31 pkt/s

3rd
AVG bitrate = 8874.31 Kbit/s
AVG packet rate = 739.526 pkt/s

4th
AVG bitrate = 9110.478 Kbit/s
AVG packet rate = 759.20 pkt/s

5th
AVG bitrate = 4705.919 Kbit/s
AVG packet rate = 392.16 pkt/s

6th
AVG bitrate = 4968.225 Kbit/s
AVG packet rate = 414.01 pkt/s

7th
AVG bitrate = 8753.13 Kbit/s
AVG packet rate = 729.42 pkt/s

8th
AVG bitrate = 9102.594 Kbit/s
AVG packet rate = 758.55 pkt/s

9th
AVG bitrate = 8258.235 Kbit/s
AVG packet rate = 688.18 pkt/s

10th
AVG bitrate = 8150.89 Kbit/s
AVG packet rate = 679.23 pkt/s

-a 10.0.0.4 -rp 9501 -


bit/pkt -> /8 -> byte/pkt

---------------------------------------- KNET Solutions --------------------------------------------------
*** Show mac address ***
sudo ovs-appctl fdb/show s1